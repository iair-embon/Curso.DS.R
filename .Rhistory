qexp(0.4,df$f)
qexp(df$f,0.4)
qexp(0.4)
prob_acum_40
?quantile
quantile(df$f,0.4)
prob_acum_40 <- df %>%
filter(f <=40) %>%
nrow()/nrow(df)
prob_acum_40
prob_acum_40 <- df %>%
filter(f <=40) %>%
nrow()
prob_acum_40
df %>%
filter(f <=40)
quantile(df$f, 0.4)
q_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
q_boot[i] <- quantile(x_sorteados,0.4)
}
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
q_boot
es_q_muestra
hist(q_boot)
quantile(df$f, 0.4)
median(q_bot)
mean(q_bot)
mean(q_boot)
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
es_q_muestra
qexp(0.4)
mean(df$f <= 40)
p_40 <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
p_40
q_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
q_boot[i] <- quantile(x_sorteados,0.4)
}
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
x_sorteados
x_sorteados %>%
filter(x_sorteados <= 40) %>%
length()/length(x_sorteados)
x_sorteados[x_sorteados <= 40]
q_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
q_boot[i] <-length(x_sorteados[x_sorteados <= 40])/ length(x_sorteados)
}
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
es_q_muestra
hist(q_boot)
prom_muestra <- mean(df$f)
es_media_muestra <- sd(df$f)/ sqrt(nrow(df))
prom_muestra
mediana_muestra <- median(df$f)
mediana_boot <- rep(NaN, 50000)
for (i in 1:length(mediana_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
mediana_boot[i] <- median(x_sorteados)
}
es_mediana_muestra <- sd(mediana_boot)/ sqrt(nrow(df))
var_muestra <- var(df$f)
var_muestra
varianza_boot <- rep(NaN, 50000)
for (i in 1:length(varianza_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
varianza_boot[i] <- var(x_sorteados)
}
es_varianza_muestra <- sd(varianza_boot)/ sqrt(nrow(df))
es_varianza_muestra
mean(varianza_boot)
hist(df$f)
plot(density(df$f))
pexp(40)
pexp
pexp(0.4)
pexp
dexp(0.4)
?pexp
lamda_est <- 1/mean(df$f)
lamda_est
pexp(40, lamda_est)
pexp
pexp(40, lamda_est)
p_40_exp <- pexp(40, lamda_est)
lamda_est <- 1/mean(df$f)
p_40_exp <- pexp(40, lamda_est)
## standar error
p_boot_exp <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lamda_est <- 1/mean(x_sorteados)
p_boot_exp[i] <-pexp(40, lamda_est)
}
es_p_muestra_exp <- sd(q_boot_exp)/ sqrt(nrow(df))
es_p_muestra_exp <- sd(p_boot_exp)/ sqrt(nrow(df))
hist(p_boot_exp)
mean(p_boot_exp)
es_p_muestra_exp
es_p_muestra <- sd(p_boot)/ sqrt(length(p_boot)) ### ????? esta bien dividir aca?
##############
# Entrega 2  #
# iair embon #
##############
# Leo los datos
df <- read.table("http://astrostatistics.psu.edu/datasets/GRB_afterglow.dat",
header=T, skip=1)
require(dplyr)
### 1
## P(X<=40)
p_40 <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
## standar error
p_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
p_boot[i] <-length(x_sorteados[x_sorteados <= 40])/ length(x_sorteados)
}
es_p_muestra <- sd(p_boot)/ sqrt(length(p_boot))
es_p_muestra
p_boot_exp <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lamda_est <- 1/mean(x_sorteados)
p_boot_exp[i] <-pexp(40, lamda_est)
}
es_p_muestra_exp <- sd(p_boot_exp)/ sqrt(nrow(df))
es_p_muestra_exp
density(df$f)
plot(density(df$f))
hist(df$f)
plot(density(df$f))
?density
hist(df$f)
lines(density(df$f)
hist(df$f)
lines(density(df$f)
hist(df$f)
lines(density(df$f))
hist(df$f)
lines(density(df$f))
lines(density(df$f))
hist(df$f)
lines(density(df$f),
lwd = 2,
col = "chocolate3")
density(df$f)
hist(df$f, prob = T)
lines(density(df$f),
lwd = 2,
col = "chocolate3")
?rexp
hist(df$f, prob = T)
lines(density(rexp(1000,1/lamda_est)),
lwd = 2,
col = "chocolate3")
rexp(1000,1/lamda_est)
rexp(1000, scale=1/lambda_est)
rexp(1000, scale=1/lambda_est))
rexp(1000, 1/lambda_est)
lambda_est)
lambda_est
lambda_est <- 1/mean(df$f)
p_40_exp <- pexp(40, lambda_est)
## standar error
p_boot_exp <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
p_boot_exp[i] <-pexp(40, lambda_est)
}
es_p_muestra_exp <- sd(p_boot_exp)/ sqrt(nrow(df))
### 8
# con los datos que tengo
hist(df$f, prob = T)
lines(density(df$f),
lwd = 2,
col = "chocolate3")
# la densidad ahora es a partir de una distribucion exp con param lamnda = lamda_est
hist(df$f, prob = T)
lines(density(rexp(1000, 1/lambda_est)),
lwd = 2,
col = "chocolate3")
lambda_est
lambda_est <- 1/mean(df$f)
lambda_est
prom_muestra_exp <- 1/lambda_est
9
prom_muestra_exp
prom_muestra_exp
mean(df$f)
es_prom_muestra_exp <- sd(prom_boot_exp)/ sqrt(nrow(df))
prom_muestra_exp <- 1/lambda_est
# error estandar estimado
prom_boot_exp <- rep(NaN, 50000)
for (i in 1:length(prom_boot_exp)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
prom_boot_exp[i] <-1/lambda_est
}
es_prom_muestra_exp <- sd(prom_boot_exp)/ sqrt(nrow(df))
es_prom_muestra_exp <- sd(prom_boot_exp)/ sqrt(nrow(df))
es_prom_muestra_exp
hist(prom_boot_exp)
mediana_muestra <- log(2)/lambda_est
mediana_muestra
mediana_muestra
mediana_muestra_exp <- log(2)/lambda_est
mediana_boot_exp <- rep(NaN, 10000)
for (i in 1:length(mediana_boot_exp)) {
x_sorteados <- sample(df$f,size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
mediana_boot_exp[i] <-  log(2)/lambda_est
}
es_mediana_muestra_exp <- sd(mediana_boot_exp)/sqrt(nrow(df))
es_mediana_muestra_exp
hist(mediana_boot_exp)
mediana_muestra_exp
varianza_muestra_exp <- 1/sqrt(lambda_est)
lambda_est
lambda_est <- 1/mean(df$f)
varianza_muestra_exp <- 1/sqrt(lambda_est)
varianza_muestra_exp
lambda_est
varianza_boot_exp <- rep(NaN, 10000)
for (i in 1:length(varianza_boot_exp)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
varianza_boot_exp[i] <- 1/sqrt(lambda_est)
}
es_varianza_muestra_exp <- sd(varianza_boot_exp)/ sqrt(nrow(df))
lambda_est <- 1/mean(df$f)
lambda_est
varianza_muestra_exp <- 1/sqrt(lambda_est)
varianza_boot_exp <- rep(NaN, 10000)
for (i in 1:length(varianza_boot_exp)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
varianza_boot_exp[i] <- 1/sqrt(lambda_est)
}
es_varianza_muestra_exp <- sd(varianza_boot_exp)/ sqrt(nrow(df))
lambda_est
es_varianza_muestra_exp <- sd(varianza_boot_exp)/ sqrt(nrow(df))
es_varianza_muestra_exp
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo.R", echo=TRUE)
datos <- rexp(10000)
plot(datos)
plot(datos)
hist(datos)
lambda <- 1/10
lambda
datos <- rexp(10000,lambda)
hist(datos)
mu <- 1/lambda
vari <- 1/lambda**2
vari
mu
mean(datos)
var(datos)
p_40 <- 1-exp(-lambda*40)
p_40
?quantile
lambda <- 0.03
p_40_sombrero <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
lambda_est <- 1/mean(df$f)
p_40_rulo <- pexp(40, lambda_est)
ECME_sombrero <- function(n){
Nrep <- 1000
muchos_p_40_sombrero <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
p_sombrero <- length(muchas_exponenciales[muchas_exponenciales <= 40])/
length(muchas_exponenciales)
muchos_p_40_sombrero[i] <- p_sombrero
}
p_40 <- 1-exp(-lambda*40)
ECME_sombrero <- sum((muchos_p_40_sombrero-  p_40)**2) /
length(muchos_p_40_sombrero)
return(ECME_sombrero)
}
ECME_sombrero_n50 <- ECME_sombrero(n=50)
ECME_sombrero_n50
lambda
ECME_rulo <- function(n){
Nrep <- 1000
muchos_p_40_rulo <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
lambda_est <- 1/mean(muchas_exponenciales)
p_rulo <- pexp(40, lambda_est)
muchos_p_40_rulo[i] <- p_rulo
}
p_40 <- 1-exp(-lambda*40)
ECME_rulo <- sum((muchos_p_40_rulo -  p_40)**2) /
length(muchos_p_40_rulo)
return(ECME_rulo)
}
ECME_rulo_n50 <- ECME_rulo(n=50)
ECME_rulo_n50
ECME_sombrero_n50
ECME_rulo_n50
ECME_sombrero_n50 <- ECME_sombrero(n=150)
ECME_rulo_n50 <- ECME_rulo(n=150)
ECME_sombrero_n50 <- ECME_sombrero(n=50)
ECME_rulo_n50 <- ECME_rulo(n=50)
# n150
ECME_sombrero_n150 <- ECME_sombrero(n=150)
ECME_rulo_n150 <- ECME_rulo(n=150)
ECME_sombrero_n150
ECME_rulo_n150
ECME_sombrero_n200 <- ECME_sombrero(n=200)
ECME_rulo_n200 <- ECME_rulo(n=200)
ECME_sombrero_n200
ECME_rulo_n200
ECME_sombrero_n500 <- ECME_sombrero(n=500)
ECME_rulo_n500 <- ECME_rulo(n=500)
ECME_sombrero_n500
ECME_rulo_n500
df.ECME <- data.frame(estimador = c("rulo","sombrero"),
n50 = c(ECME_rulo_n50,ECME_sombrero_n50),
n150= c(ECME_rulo_n150,ECME_sombrero_n150),
n200= c(ECME_rulo_n200,ECME_sombrero_n200),
n500= c(ECME_rulo_n500,ECME_sombrero_n500))
print(df.ECME)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo_entrega.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo_entrega.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo_entrega.R", echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
########### Parte 3
# Leo los datos
df <- read.table("http://astrostatistics.psu.edu/datasets/GRB_afterglow.dat",
header=T, skip=1)
# estimo varianza asumiendo una distribucion exponencial
lambda_est <- 1/mean(df$f)
### 12
#mu <- 1/lambda
#vari <- 1/lambda**2
#p_40 <- 1-exp(-lambda*40)
#### 13
lambda <- 0.03
require(dplyr)
p_40_sombrero <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
lambda_est <- 1/mean(df$f)
p_40_rulo <- pexp(40, lambda_est)
# creo una funcion que saque el ECME para el estimador sombrero
ECME_sombrero <- function(n){
Nrep <- 1000
muchos_p_40_sombrero <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
p_sombrero <- length(muchas_exponenciales[muchas_exponenciales <= 40])/
length(muchas_exponenciales)
muchos_p_40_sombrero[i] <- p_sombrero
}
p_40 <- 1-exp(-lambda*40)
ECME_sombrero <- sum((muchos_p_40_sombrero-  p_40)**2) /
length(muchos_p_40_sombrero)
return(ECME_sombrero)
}
# creo una funcion que saque el ECME para el estimador rulo
ECME_rulo <- function(n){
Nrep <- 1000
muchos_p_40_rulo <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
lambda_est <- 1/mean(muchas_exponenciales)
p_rulo <- pexp(40, lambda_est)
muchos_p_40_rulo[i] <- p_rulo
}
p_40 <- 1-exp(-lambda*40)
ECME_rulo <- sum((muchos_p_40_rulo -  p_40)**2) /
length(muchos_p_40_rulo)
return(ECME_rulo)
}
# pruebo la funcion con diferentes ns
# n50
ECME_sombrero_n50 <- ECME_sombrero(n=50)
ECME_rulo_n50 <- ECME_rulo(n=50)
# n150
ECME_sombrero_n150 <- ECME_sombrero(n=150)
ECME_rulo_n150 <- ECME_rulo(n=150)
# n200
ECME_sombrero_n200 <- ECME_sombrero(n=200)
ECME_rulo_n200 <- ECME_rulo(n=200)
# n500
ECME_sombrero_n500 <- ECME_sombrero(n=500)
ECME_rulo_n500 <- ECME_rulo(n=500)
df.ECME <- data.frame(estimador = c("rulo","sombrero"),
n50 = c(ECME_rulo_n50,ECME_sombrero_n50),
n150= c(ECME_rulo_n150,ECME_sombrero_n150),
n200= c(ECME_rulo_n200,ECME_sombrero_n200),
n500= c(ECME_rulo_n500,ECME_sombrero_n500))
print(df.ECME)
# Se prefiere el estimador rulo, ya que en cada estimacion
# tuvo un menor error cuadratico medio empirico.
?elseif
?ifelse
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
albun <- 1:6
albun
albun_en_proceso <- rep(NaN,6)
albun_en_proceso <- rep(NaN, length(albun_completo))
albun_completo <- 1:6
albun_en_proceso <- rep(NaN, length(albun_completo))
fig <- sample(1:6,1, replace = T)
!(fig %IN% albun_en_proceso)
!(fig %in% albun_en_proceso)
albun_completo <- 1:6
albun_en_proceso <- rep(NaN, length(albun_completo))
while (albun_completo != albun_en_proceso) {
fig <- sample(1:6,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
}
albun_en_proceso
albun_completo
albun_completo != albun_en_proceso
albun_completo != albun_en_proceso
albun_completo != albun_en_proceso
albun_completo != albun_en_proceso
albun_en_proceso <- rep(0, length(albun_completo))
albun_completo != albun_en_proceso
albun_completo <- 1:6
albun_en_proceso <- rep(0, length(albun_completo))
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:6,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
}
albun_en_proceso
albun_completo <- 1:6
albun_en_proceso <- rep(0, length(albun_completo))
compra_paquete <- 1
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:6,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
compra_paquete <- compra_paquete + 1
}
compra_paquete
cuantasFigus <- function(figusTotal){
albun_completo <- 1:figusTotal
albun_en_proceso <- rep(0, length(albun_completo))
compra_paquete <- 1
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:figusTotal,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
compra_paquete <- compra_paquete + 1
}
}
cuantasFigus(6)
cuantasFigus <- function(figusTotal){
albun_completo <- 1:figusTotal
albun_en_proceso <- rep(0, length(albun_completo))
compra_paquete <- 1
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:figusTotal,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
compra_paquete <- compra_paquete + 1
}
return(compra_paquete)
}
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
?replicate()
Nrep <- 1000
sim_cuantas_figuas <- rep(NaN,Nrep)
for (i in 1:Nrep) {
sim_cuantas_figuas[i] <- cuantasFigus(6)
}
hist(sim_cuantas_figuas)
media_sim <- mean(sim_cuantas_figuas)
media_sim
cumsum(sim_cuantas_figuas[sim_cuantas_figuas <= 16])
length(sim_cuantas_figuas[sim_cuantas_figuas <= 16])
p_x_<_16 <- length(sim_cuantas_figuas[sim_cuantas_figuas <= 16])/ Nrep
p_x_16 <- length(sim_cuantas_figuas[sim_cuantas_figuas <= 16])/ Nrep
quantile(sim_cuantas_figuas,0.9)
length(sim_cuantas_figuas[sim_cuantas_figuas <= 24])/ Nrep
q24 <- quantile(sim_cuantas_figuas,0.9)
