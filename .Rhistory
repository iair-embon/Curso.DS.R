<<<<<<< HEAD
?quantile
quantile(df$f,0.4)
prob_acum_40 <- df %>%
filter(f <=40) %>%
nrow()/nrow(df)
prob_acum_40
prob_acum_40 <- df %>%
filter(f <=40) %>%
nrow()
prob_acum_40
df %>%
filter(f <=40)
quantile(df$f, 0.4)
q_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
q_boot[i] <- quantile(x_sorteados,0.4)
}
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
q_boot
es_q_muestra
hist(q_boot)
quantile(df$f, 0.4)
median(q_bot)
mean(q_bot)
mean(q_boot)
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
es_q_muestra
qexp(0.4)
mean(df$f <= 40)
p_40 <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
p_40
q_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
q_boot[i] <- quantile(x_sorteados,0.4)
}
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
x_sorteados
x_sorteados %>%
filter(x_sorteados <= 40) %>%
length()/length(x_sorteados)
x_sorteados[x_sorteados <= 40]
q_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
q_boot[i] <-length(x_sorteados[x_sorteados <= 40])/ length(x_sorteados)
}
es_q_muestra <- sd(q_boot)/ sqrt(nrow(df))
es_q_muestra
hist(q_boot)
prom_muestra <- mean(df$f)
es_media_muestra <- sd(df$f)/ sqrt(nrow(df))
prom_muestra
mediana_muestra <- median(df$f)
mediana_boot <- rep(NaN, 50000)
for (i in 1:length(mediana_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
mediana_boot[i] <- median(x_sorteados)
}
es_mediana_muestra <- sd(mediana_boot)/ sqrt(nrow(df))
var_muestra <- var(df$f)
var_muestra
varianza_boot <- rep(NaN, 50000)
for (i in 1:length(varianza_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
varianza_boot[i] <- var(x_sorteados)
}
es_varianza_muestra <- sd(varianza_boot)/ sqrt(nrow(df))
es_varianza_muestra
mean(varianza_boot)
hist(df$f)
plot(density(df$f))
pexp(40)
pexp
pexp(0.4)
pexp
dexp(0.4)
?pexp
lamda_est <- 1/mean(df$f)
lamda_est
pexp(40, lamda_est)
pexp
pexp(40, lamda_est)
p_40_exp <- pexp(40, lamda_est)
lamda_est <- 1/mean(df$f)
p_40_exp <- pexp(40, lamda_est)
## standar error
p_boot_exp <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lamda_est <- 1/mean(x_sorteados)
p_boot_exp[i] <-pexp(40, lamda_est)
}
es_p_muestra_exp <- sd(q_boot_exp)/ sqrt(nrow(df))
es_p_muestra_exp <- sd(p_boot_exp)/ sqrt(nrow(df))
hist(p_boot_exp)
mean(p_boot_exp)
es_p_muestra_exp
es_p_muestra <- sd(p_boot)/ sqrt(length(p_boot)) ### ????? esta bien dividir aca?
##############
# Entrega 2  #
# iair embon #
##############
# Leo los datos
df <- read.table("http://astrostatistics.psu.edu/datasets/GRB_afterglow.dat",
header=T, skip=1)
require(dplyr)
### 1
## P(X<=40)
p_40 <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
## standar error
p_boot <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
p_boot[i] <-length(x_sorteados[x_sorteados <= 40])/ length(x_sorteados)
}
es_p_muestra <- sd(p_boot)/ sqrt(length(p_boot))
es_p_muestra
p_boot_exp <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lamda_est <- 1/mean(x_sorteados)
p_boot_exp[i] <-pexp(40, lamda_est)
}
es_p_muestra_exp <- sd(p_boot_exp)/ sqrt(nrow(df))
es_p_muestra_exp
density(df$f)
plot(density(df$f))
hist(df$f)
plot(density(df$f))
?density
hist(df$f)
lines(density(df$f)
hist(df$f)
lines(density(df$f)
hist(df$f)
lines(density(df$f))
hist(df$f)
lines(density(df$f))
lines(density(df$f))
hist(df$f)
lines(density(df$f),
lwd = 2,
col = "chocolate3")
density(df$f)
hist(df$f, prob = T)
lines(density(df$f),
lwd = 2,
col = "chocolate3")
?rexp
hist(df$f, prob = T)
lines(density(rexp(1000,1/lamda_est)),
lwd = 2,
col = "chocolate3")
rexp(1000,1/lamda_est)
rexp(1000, scale=1/lambda_est)
rexp(1000, scale=1/lambda_est))
rexp(1000, 1/lambda_est)
lambda_est)
lambda_est
lambda_est <- 1/mean(df$f)
p_40_exp <- pexp(40, lambda_est)
## standar error
p_boot_exp <- rep(NaN, 50000)
for (i in 1:length(q_boot)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
p_boot_exp[i] <-pexp(40, lambda_est)
}
es_p_muestra_exp <- sd(p_boot_exp)/ sqrt(nrow(df))
### 8
# con los datos que tengo
hist(df$f, prob = T)
lines(density(df$f),
lwd = 2,
col = "chocolate3")
# la densidad ahora es a partir de una distribucion exp con param lamnda = lamda_est
hist(df$f, prob = T)
lines(density(rexp(1000, 1/lambda_est)),
lwd = 2,
col = "chocolate3")
lambda_est
lambda_est <- 1/mean(df$f)
lambda_est
prom_muestra_exp <- 1/lambda_est
9
prom_muestra_exp
prom_muestra_exp
mean(df$f)
es_prom_muestra_exp <- sd(prom_boot_exp)/ sqrt(nrow(df))
prom_muestra_exp <- 1/lambda_est
# error estandar estimado
prom_boot_exp <- rep(NaN, 50000)
for (i in 1:length(prom_boot_exp)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
prom_boot_exp[i] <-1/lambda_est
}
es_prom_muestra_exp <- sd(prom_boot_exp)/ sqrt(nrow(df))
es_prom_muestra_exp <- sd(prom_boot_exp)/ sqrt(nrow(df))
es_prom_muestra_exp
hist(prom_boot_exp)
mediana_muestra <- log(2)/lambda_est
mediana_muestra
mediana_muestra
mediana_muestra_exp <- log(2)/lambda_est
mediana_boot_exp <- rep(NaN, 10000)
for (i in 1:length(mediana_boot_exp)) {
x_sorteados <- sample(df$f,size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
mediana_boot_exp[i] <-  log(2)/lambda_est
}
es_mediana_muestra_exp <- sd(mediana_boot_exp)/sqrt(nrow(df))
es_mediana_muestra_exp
hist(mediana_boot_exp)
mediana_muestra_exp
varianza_muestra_exp <- 1/sqrt(lambda_est)
lambda_est
lambda_est <- 1/mean(df$f)
varianza_muestra_exp <- 1/sqrt(lambda_est)
varianza_muestra_exp
lambda_est
varianza_boot_exp <- rep(NaN, 10000)
for (i in 1:length(varianza_boot_exp)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
varianza_boot_exp[i] <- 1/sqrt(lambda_est)
}
es_varianza_muestra_exp <- sd(varianza_boot_exp)/ sqrt(nrow(df))
lambda_est <- 1/mean(df$f)
lambda_est
varianza_muestra_exp <- 1/sqrt(lambda_est)
varianza_boot_exp <- rep(NaN, 10000)
for (i in 1:length(varianza_boot_exp)) {
x_sorteados <- sample(df$f, size = length(df$f), replace = T)
lambda_est <- 1/mean(x_sorteados)
varianza_boot_exp[i] <- 1/sqrt(lambda_est)
}
es_varianza_muestra_exp <- sd(varianza_boot_exp)/ sqrt(nrow(df))
lambda_est
es_varianza_muestra_exp <- sd(varianza_boot_exp)/ sqrt(nrow(df))
es_varianza_muestra_exp
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo.R", echo=TRUE)
datos <- rexp(10000)
plot(datos)
plot(datos)
hist(datos)
lambda <- 1/10
lambda
datos <- rexp(10000,lambda)
hist(datos)
mu <- 1/lambda
vari <- 1/lambda**2
vari
mu
mean(datos)
var(datos)
p_40 <- 1-exp(-lambda*40)
p_40
?quantile
lambda <- 0.03
p_40_sombrero <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
lambda_est <- 1/mean(df$f)
p_40_rulo <- pexp(40, lambda_est)
=======
sum(df$espacio_ve == "Arenales")
sum(df$ubicacion == "Arenales")
arboles_cercanos <- df[df$espacio_ve == "AVELLANEDA, NICOLÁS, Pres.",]
arboles_cercanos <- df[df$espacio_ve == "AVELLANEDA, NICOLÁS, Pres.",]
arboles_cercanos_ord < sort(arboles_cercanos)
arboles_cercanos <- df[df$espacio_ve == "AVELLANEDA, NICOLÁS, Pres.",]
arboles_cercanos_ord < sort(arboles_cercanos)
arboles_cercanos_ord <- sort(arboles_cercanos)
?sort
arboles_cercanos_ord <- sort(arboles_cercanos$espacio_ve)
unique(arboles_cercanos$nombre_com)
>>>>>>> 4305a969ee28438ec0052252272e39330ea99468
>>>>>>> d570664a2e5b5377ddd9cd59fb12cee5d5e6f7d3
ECME_sombrero <- function(n){
Nrep <- 1000
muchos_p_40_sombrero <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
p_sombrero <- length(muchas_exponenciales[muchas_exponenciales <= 40])/
length(muchas_exponenciales)
muchos_p_40_sombrero[i] <- p_sombrero
}
p_40 <- 1-exp(-lambda*40)
ECME_sombrero <- sum((muchos_p_40_sombrero-  p_40)**2) /
length(muchos_p_40_sombrero)
return(ECME_sombrero)
}
ECME_sombrero_n50 <- ECME_sombrero(n=50)
ECME_sombrero_n50
lambda
ECME_rulo <- function(n){
Nrep <- 1000
muchos_p_40_rulo <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
lambda_est <- 1/mean(muchas_exponenciales)
p_rulo <- pexp(40, lambda_est)
muchos_p_40_rulo[i] <- p_rulo
}
p_40 <- 1-exp(-lambda*40)
ECME_rulo <- sum((muchos_p_40_rulo -  p_40)**2) /
length(muchos_p_40_rulo)
return(ECME_rulo)
}
ECME_rulo_n50 <- ECME_rulo(n=50)
ECME_rulo_n50
ECME_sombrero_n50
ECME_rulo_n50
ECME_sombrero_n50 <- ECME_sombrero(n=150)
ECME_rulo_n50 <- ECME_rulo(n=150)
ECME_sombrero_n50 <- ECME_sombrero(n=50)
ECME_rulo_n50 <- ECME_rulo(n=50)
# n150
ECME_sombrero_n150 <- ECME_sombrero(n=150)
ECME_rulo_n150 <- ECME_rulo(n=150)
ECME_sombrero_n150
ECME_rulo_n150
ECME_sombrero_n200 <- ECME_sombrero(n=200)
ECME_rulo_n200 <- ECME_rulo(n=200)
ECME_sombrero_n200
ECME_rulo_n200
ECME_sombrero_n500 <- ECME_sombrero(n=500)
ECME_rulo_n500 <- ECME_rulo(n=500)
ECME_sombrero_n500
ECME_rulo_n500
df.ECME <- data.frame(estimador = c("rulo","sombrero"),
n50 = c(ECME_rulo_n50,ECME_sombrero_n50),
n150= c(ECME_rulo_n150,ECME_sombrero_n150),
n200= c(ECME_rulo_n200,ECME_sombrero_n200),
n500= c(ECME_rulo_n500,ECME_sombrero_n500))
print(df.ECME)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo_entrega.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo_entrega.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Entrega2/Codigo_entrega.R", echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
########### Parte 3
# Leo los datos
df <- read.table("http://astrostatistics.psu.edu/datasets/GRB_afterglow.dat",
header=T, skip=1)
# estimo varianza asumiendo una distribucion exponencial
lambda_est <- 1/mean(df$f)
### 12
#mu <- 1/lambda
#vari <- 1/lambda**2
#p_40 <- 1-exp(-lambda*40)
#### 13
lambda <- 0.03
require(dplyr)
p_40_sombrero <- df %>%
filter(f <= 40) %>%
nrow()/length(df$f)
lambda_est <- 1/mean(df$f)
p_40_rulo <- pexp(40, lambda_est)
# creo una funcion que saque el ECME para el estimador sombrero
ECME_sombrero <- function(n){
Nrep <- 1000
muchos_p_40_sombrero <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
p_sombrero <- length(muchas_exponenciales[muchas_exponenciales <= 40])/
length(muchas_exponenciales)
muchos_p_40_sombrero[i] <- p_sombrero
}
p_40 <- 1-exp(-lambda*40)
ECME_sombrero <- sum((muchos_p_40_sombrero-  p_40)**2) /
length(muchos_p_40_sombrero)
return(ECME_sombrero)
}
# creo una funcion que saque el ECME para el estimador rulo
ECME_rulo <- function(n){
Nrep <- 1000
muchos_p_40_rulo <- rep(NaN,Nrep)
for (i in 1:Nrep) {
muchas_exponenciales <- rexp(n, 0.03)
lambda_est <- 1/mean(muchas_exponenciales)
p_rulo <- pexp(40, lambda_est)
muchos_p_40_rulo[i] <- p_rulo
}
p_40 <- 1-exp(-lambda*40)
ECME_rulo <- sum((muchos_p_40_rulo -  p_40)**2) /
length(muchos_p_40_rulo)
return(ECME_rulo)
}
# pruebo la funcion con diferentes ns
# n50
ECME_sombrero_n50 <- ECME_sombrero(n=50)
ECME_rulo_n50 <- ECME_rulo(n=50)
# n150
ECME_sombrero_n150 <- ECME_sombrero(n=150)
ECME_rulo_n150 <- ECME_rulo(n=150)
# n200
ECME_sombrero_n200 <- ECME_sombrero(n=200)
ECME_rulo_n200 <- ECME_rulo(n=200)
# n500
ECME_sombrero_n500 <- ECME_sombrero(n=500)
ECME_rulo_n500 <- ECME_rulo(n=500)
df.ECME <- data.frame(estimador = c("rulo","sombrero"),
n50 = c(ECME_rulo_n50,ECME_sombrero_n50),
n150= c(ECME_rulo_n150,ECME_sombrero_n150),
n200= c(ECME_rulo_n200,ECME_sombrero_n200),
n500= c(ECME_rulo_n500,ECME_sombrero_n500))
print(df.ECME)
# Se prefiere el estimador rulo, ya que en cada estimacion
# tuvo un menor error cuadratico medio empirico.
?elseif
?ifelse
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
sample(1:6,1, replace = T)
albun <- 1:6
albun
albun_en_proceso <- rep(NaN,6)
albun_en_proceso <- rep(NaN, length(albun_completo))
albun_completo <- 1:6
albun_en_proceso <- rep(NaN, length(albun_completo))
fig <- sample(1:6,1, replace = T)
!(fig %IN% albun_en_proceso)
!(fig %in% albun_en_proceso)
albun_completo <- 1:6
albun_en_proceso <- rep(NaN, length(albun_completo))
while (albun_completo != albun_en_proceso) {
fig <- sample(1:6,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
}
albun_en_proceso
albun_completo
albun_completo != albun_en_proceso
albun_completo != albun_en_proceso
albun_completo != albun_en_proceso
albun_completo != albun_en_proceso
albun_en_proceso <- rep(0, length(albun_completo))
albun_completo != albun_en_proceso
albun_completo <- 1:6
albun_en_proceso <- rep(0, length(albun_completo))
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:6,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
}
albun_en_proceso
albun_completo <- 1:6
albun_en_proceso <- rep(0, length(albun_completo))
compra_paquete <- 1
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:6,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
compra_paquete <- compra_paquete + 1
}
compra_paquete
cuantasFigus <- function(figusTotal){
albun_completo <- 1:figusTotal
albun_en_proceso <- rep(0, length(albun_completo))
compra_paquete <- 1
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:figusTotal,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
compra_paquete <- compra_paquete + 1
}
}
cuantasFigus(6)
cuantasFigus <- function(figusTotal){
albun_completo <- 1:figusTotal
albun_en_proceso <- rep(0, length(albun_completo))
compra_paquete <- 1
while (sum(albun_completo != albun_en_proceso) != 0) {
fig <- sample(1:figusTotal,1, replace = T)
if(!(fig %in% albun_en_proceso)){
albun_en_proceso[fig] <- fig
}
compra_paquete <- compra_paquete + 1
}
return(compra_paquete)
}
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
cuantasFigus(6)
?replicate()
Nrep <- 1000
sim_cuantas_figuas <- rep(NaN,Nrep)
for (i in 1:Nrep) {
sim_cuantas_figuas[i] <- cuantasFigus(6)
}
hist(sim_cuantas_figuas)
media_sim <- mean(sim_cuantas_figuas)
media_sim
cumsum(sim_cuantas_figuas[sim_cuantas_figuas <= 16])
length(sim_cuantas_figuas[sim_cuantas_figuas <= 16])
p_x_<_16 <- length(sim_cuantas_figuas[sim_cuantas_figuas <= 16])/ Nrep
p_x_16 <- length(sim_cuantas_figuas[sim_cuantas_figuas <= 16])/ Nrep
quantile(sim_cuantas_figuas,0.9)
length(sim_cuantas_figuas[sim_cuantas_figuas <= 24])/ Nrep
q24 <- quantile(sim_cuantas_figuas,0.9)
citation()
citation("gplot2")
citation("ggplot2")
?quantile
<<<<<<< HEAD
=======
=======
estimaciones_tita_sombrero <- rep(NaN, 1000)
titas_verdaderos <- rep(NaN, 1000)
for (i in 1:1000) {
datos_generados <- rexp(n,lambda)
titas_verdaderos[i] <- 1-pexp(1,lambda)
estimaciones_tita_sombrero[i]<- estsombrero(datos_generados)
}
ECME <- sum((estimaciones_tita_sombrero-titas_verdaderos)**2)/1000
return(ECME)
}
ECME_sombrero(50)
ECME_sombrero(500.)
ECME_sombrero(1500)
ECME_sombrero(5)
ECME_rulo <- function(n, lambda){
estimaciones_tita_rulo <- rep(NaN, 1000)
titas_verdaderos <- rep(NaN, 1000)
for (i in 1:1000) {
datos_generados <- rexp(n,lambda)
titas_verdaderos[i] <- 1-pexp(1,lambda)
estimaciones_tita_rulo[i]<- estrulo(datos_generados)
}
ECME <- sum((estimaciones_tita_rulo-titas_verdaderos)**2)/1000
return(ECME)
}
ECME_rulo(50,0.2)
ECME_sombrero(50,0.2)
ECME_sombrero <- function(n, lambda){
estimaciones_tita_sombrero <- rep(NaN, 1000)
titas_verdaderos <- rep(NaN, 1000)
for (i in 1:1000) {
datos_generados <- rexp(n,lambda)
titas_verdaderos[i] <- 1-pexp(1,lambda)
estimaciones_tita_sombrero[i]<- estsombrero(datos_generados)
}
ECME <- sum((estimaciones_tita_sombrero-titas_verdaderos)**2)/1000
return(ECME)
}
ECME_sombrero(50,0.2)
ECME_sombrero(50,0.2)
ECME_rulo(50,0.2)
ECME_rulo(500,0.2)
ECME_sombrero(500,0.2)
ECME_somb_rul <- function(n, lambda){
estimaciones_tita_sombrero <- rep(NaN, 1000)
estimaciones_tita_rulo <- rep(NaN, 1000)
titas_verdaderos <- rep(NaN, 1000)
for (i in 1:1000) {
datos_generados <- rexp(n,lambda)
titas_verdaderos[i] <- 1-pexp(1,lambda)
estimaciones_tita_sombrero[i]<- estsombrero(datos_generados)
estimaciones_tita_rulo[i]<- estrulo(datos_generados)
}
ECME_somb <- sum((estimaciones_tita_sombrero-titas_verdaderos)**2)/1000
ECME_rul <- sum((estimaciones_tita_rulo-titas_verdaderos)**2)/1000
ECME <- list(ECME_somb = ECME_somb,
ECME_rul = ECME_rul)
return(ECME)
}
ECME_somb_rul(50,0.2)
ECME_somb_rul(500,0.2)
ECME_somb_rul(50,0.2)
ECME_somb_rul(50,0.2)[1]
ECME_somb_rul(50,0.2)[[1]]
ECME_somb_rul(50,0.2)[[2]]
rep(c(150,200,500,1000), each =2)
rep(c("sombrero", "rulo"), each =2)
?rep
rep(c("sombrero", "rulo"), each =2, times = 2)
rep(c("sombrero", "rulo"), times = 2, each =2)
rep(c("sombrero", "rulo"), times = 2, each =2)
<<<<<<< HEAD
source("~/Documents/Investigación/Curso.DS.R/Clase_8_6/sim_clase_8_06.R", echo=TRUE)
rep(c("sombrero", "rulo")
rep(c("sombrero", "rulo"), times = 2, each =2)
rep(c("sombrero", "rulo"), times = 2)
rep(c(150,200,500,1000), each =2)
rep(c("sombrero", "rulo"), times = 4)
ECME
ECME_somb_rul(150,0.2)
ECME_somb_rul(150,0.2)[[1]]
ECME_somb_rul(150,0.2)[[2]]
ECME_somb_rul(150,0.2)
ECME_150 <- ECME_somb_rul(150,0.2)
ECME_200 <- ECME_somb_rul(200,0.2)
ECME_500 <- ECME_somb_rul(500,0.2)
ECME_1000 <- ECME_somb_rul(1000,0.2)
ECME_150
ECME_150[[1]]
ECME_150 <- ECME_somb_rul(150,0.2)
ECME_200 <- ECME_somb_rul(200,0.2)
ECME_500 <- ECME_somb_rul(500,0.2)
ECME_1000 <- ECME_somb_rul(1000,0.2)
df_ECME <- data.frame(n = rep(c(150,200,500,1000), each =2),
tipo = rep(c("sombrero", "rulo"), times = 4),
ECME = c(ECME_150[[1]],ECME_150[[2]],
ECME_200[[1]],ECME_200[[2]],
ECME_500[[1]],ECME_500[[2]],
ECME_1000[[1]],ECME_1000[[2]]))
df_ECME
g1
g1
g2
hist(estimaciones_tita_sombrero, xlim = c(0.5,1), ylim = c(0,350), breaks = 20)
hist(estimaciones_tita_rulo, xlim = c(0.5,1), ylim = c(0,350), breaks = 20)
1/0.2**2
0.2**2
1/0.04
mu <- 1/0.2
sigma2 <- 1/0.2**2
P_1_norm <- 1- pnorm(1,mu,sqrt(sigma2))
P_1_norm
plot(rnorm(1000,mu,sqrt(sigma2)))
hist(rnorm(1000,mu,sqrt(sigma2)))
P_1_norm
i <- 1
datos_generados <- rexp(i,lambda)
datos_generados
1-pexp(1,lambda)
titas_verdaderos[i]
estsombrero(datos_generados)
estrulo(datos_generados)
MuchasEstimacionesTita_n <- function(n){
estimaciones_tita_sombrero <- rep(NaN, n)
estimaciones_tita_rulo <- rep(NaN, n)
titas_verdaderos <- rep(NaN, n)
for (i in 1:n) {
datos_generados <- rexp(i,lambda)
estimaciones_tita_sombrero[i]<- estsombrero(datos_generados)
estimaciones_tita_rulo[i]<- estrulo(datos_generados)
}
lista <- c("estimaciones_tita_sombrero" = estimaciones_tita_sombrero,
"estimaciones_tita_rulo" = estimaciones_tita_rulo)
return(lista)
}
lala <- MuchasEstimacionesTita_n(10)
lala
lala$
lala[1]
lala[2]
lala[3]
lala[11]
(length(limites)/2)
limites <- MuchasEstimacionesTita_n(5000)
(length(limites)/2)
n <- 5000
limite_titaSombrero <- rep(NaN, 5000)
limite_titaRulo <- rep(NaN, 5000)
n <- 5000
limites <- MuchasEstimacionesTita_n(n)
limite_titaSombrero <- rep(NaN, 5000)
limite_titaRulo <- rep(NaN, 5000)
for (i in 1:(length(limites)/2)) {
limite_titaSombrero[i] <- limites[[i]]
limite_titaRulo[i] <- limites[[i+n]]
}
plot(1:n, limite_titaSombrero)
plot(1:n, limite_titaSombrero)
lines(1:n, limite_titaRulo, col(2))
plot(1:n, limite_titaSombrero)
lines(1:n, limite_titaRulo, col("red"))
plot(1:n, limite_titaSombrero)
lines(1:n, limite_titaRulo, col="red")
plot(1:n, limite_titaSombrero, ylab = "Tita", xlab = "n")
lines(1:n, limite_titaRulo, col="red")
hist(limite_titaSombrero)
hist(limite_titaRulo)
mean(limite_titaSombrero)
mean(limite_titaRulo)
View(estrulo)
tita_asterisco <- function(datos){
mu_est <- mean(datos)
sd_est <- sd(datos)
estimacion <- 1-pnorm(1,mu_est,sd_est)
}
tita_asterisco <- function(datos){
mu_est <- mean(datos)
sd_est <- sd(datos)
estimacion <- 1-pnorm(1,mu_est,sd_est)
}
rnomr(1000,mu,sqrt(sigma2))
rnom(1000,mu,sqrt(sigma2))
rnorm(1000,mu,sqrt(sigma2))
datos_normales <- rnorm(1000,mu,sqrt(sigma2))
tita_asterisco(datos_normales)
tita_asterisco <- function(datos){
mu_est <- mean(datos)
sd_est <- sd(datos)
estimacion <- 1-pnorm(1,mu_est,sd_est)
return(estimacion)
}
tita_asterisco(datos_normales)
1-pnorm(1,mu, sigma2)
tita_asterisco <- function(datos){
mu_est <- mean(datos)
#sd_est <- sd(datos)
sd_est <- sqrt( ( sum((datos-mu_est)**2 )) / (length(datos)-1) )
estimacion <- 1-pnorm(1,mu_est,sd_est)
return(estimacion)
}
tita_asterisco(datos_normales)
tita_asterisco <- function(datos){
mu_est <- mean(datos)
#sd_est <- sd(datos)
sd_est <- sqrt( ( sum((datos-mu_est)**2 )) / (length(datos)-1) )
estimacion <- 1-pnorm(1,mu_est,sd_est)
return(estimacion)
}
tita_asterisco(datos_normales)
1-pnorm(1,mu, sqrt(sigma2))
?rnorm
tita_asterisco <- function(datos){
mu_est <- mean(datos)
#sd_est <- sd(datos)
sd_est <- sqrt( sum( (datos-mu_est)**2 ) / (length(datos)-1) )
estimacion <- 1-pnorm(1,mu_est,sd_est)
return(estimacion)
}
mu
rep(c(150,200,500,1000), each =3)
rep(c("sombrero", "rulo"), times = 4
rep(c("sombrero", "rulo"), times = 4)
rep(c("sombrero", "rulo"), times = 4)
rep(c("sombrero", "rulo", "asterisco"), times = 4)
ECME_sombrero_rulo_asterisco <- function(n, mu, sigma2){
Nrep <- 1000
estimaciones_tita_sombrero <- rep(NaN, Nrep)
estimaciones_tita_rulo <- rep(NaN, Nrep)
estimaciones_tita_asterisco <- rep(NaN, Nrep)
titas_verdaderos <- rep(NaN, Nrep)
for (i in 1:Nrep) {
datos_generados <- rnorm(Nrep, mu, sqrt(sigma2))
titas_verdaderos[i] <- 1-pnorm(1,mu, sqrt(sigma2))
estimaciones_tita_sombrero[i]<- estsombrero(datos_generados)
estimaciones_tita_rulo[i]<- estrulo(datos_generados)
estimaciones_tita_asterisco[i]<- tita_asterisco(datos_generados)
}
ECME_somb <- sum((estimaciones_tita_sombrero-titas_verdaderos)**2)/Nrep
ECME_rul <- sum((estimaciones_tita_rulo-titas_verdaderos)**2)/Nrep
ECME_ast <- sum((estimaciones_tita_asterisco-titas_verdaderos)**2)/Nrep
ECME <- list(ECME_somb = ECME_somb,
ECME_rul = ECME_rul,
ECME_ast = ECME_ast)
return(ECME)
}
ECME_150 <- ECME_sombrero_rulo_asterisco(150,mu, sigma2)
ECME_200 <- ECME_sombrero_rulo_asterisco(200,mu, sigma2)
ECME_500 <- ECME_sombrero_rulo_asterisco(500,mu, sigma2)
ECME_1000 <- ECME_sombrero_rulo_asterisco(1000,mu, sigma2)
df_ECME <- data.frame(n = rep(c(150,200,500,1000), each =3),
tipo = rep(c("sombrero", "rulo", "asterisco"), times = 4),
ECME = c(ECME_150[[1]],ECME_150[[2]], ECME_150[[3]],
ECME_200[[1]],ECME_200[[2]], ECME_200[[3]],
ECME_500[[1]],ECME_500[[2]], ECME_500[[3]],
ECME_1000[[1]],ECME_1000[[2]], ECME_1000[[3]]))
df_ECME
library(ggplot2)
as.factor(n)
ggplot(df_ECME, aes(fill= as.factor(n), y= ECME, x=tipo)) +
geom_bar(position="dodge", stat="identity")
ggplot(df_ECME, aes(fill= n, y= ECME, x=tipo)) +
geom_bar(position="dodge", stat="identity")
ggplot(df_ECME, aes(fill= as.factor(n), y= ECME, x=tipo)) +
geom_bar(position="dodge", stat="identity")
ggplot(df_ECME, aes(fill= as.factor(n), y= ECME, x=tipo)) +
geom_bar(stat="identity")
ggplot(df_ECME, aes(fill= as.factor(n), y= ECME, x=tipo)) +
geom_bar(position="dodge")
ggplot(df_ECME, aes(fill= as.factor(n), y= ECME, x=tipo)) +
geom_bar(position="dodge", stat="identity")
ggplot(df_ECME, aes(fill= as.factor(n), y= ECME, x=tipo)) +
geom_bar(position="dodge", stat="identity")+
theme()
?theme()
prod(1:3)
1*2*3
prod(1:5)
1*2*3*4*5
=======
>>>>>>> 4305a969ee28438ec0052252272e39330ea99468
>>>>>>> 6b5ee38a69d1c0a67009b2ac102565e395665703
datos_2 <-scan("/home/Documents/Investigacion/Curso.DS.R/clase_15_6/Clase_15_6_buffalo.txt")
datos_2 <-scan("./home/Documents/Investigacion/Curso.DS.R/clase_15_6/Clase_15_6_buffalo.txt")
datos_2 <-scan("./home/iair/Documents/Investigacion/Curso.DS.R/clase_15_6/Clase_15_6_buffalo.txt")
datos_2 <-scan(".//home//iair//Documents//Investigacion//Curso.DS.R//clase_15_6//Clase_15_6_buffalo.txt")
datos_2 <-scan(126.4 82.4 78.1 51.1 90.9 76.2 104.5 87.4 110.5 25.0 69.3 53.5
39.8 63.6 46.7 72.9 79.6 83.6 80.7 60.3 79.0 74.4 49.6 54.7
71.8 49.1 103.9 51.6 82.4 83.6 77.8 79.3 89.6 85.5 58.0 120.7
110.5 65.4 39.9 40.1 88.7 71.4 83.0 55.9 89.9 84.8 105.2 113.7
124.7 114.5 115.6 102.4 101.4 89.8 71.5 70.9 98.3 55.5 66.1 78.4
120.5 97.0 110.0)
datos_2 <-scan()
datos_2
datos_2 <-scan()
126.4 82.4 78.1 51.1 90.9 76.2 104.5 87.4 110.5 25.0 69.3 53.5
39.8 63.6 46.7 72.9 79.6 83.6 80.7 60.3 79.0 74.4 49.6 54.7
71.8 49.1 103.9 51.6 82.4 83.6 77.8 79.3 89.6 85.5 58.0 120.7
110.5 65.4 39.9 40.1 88.7 71.4 83.0 55.9 89.9 84.8 105.2 113.7
124.7 114.5 115.6 102.4 101.4 89.8 71.5 70.9 98.3 55.5 66.1 78.4
120.5 97.0 110.0
datos_2 <-scan()
hist(datos_2)
hist(datos_2, breaks =  seq(20, 140, 10))
hist(datos_2, breaks =  seq(20, 140, 5))
cortes <- seq(10,130,10)
hist(datos_2, breaks =  cortes)
cortes_mov <- cortes+2
hist(datos_2, breaks =  cortes_mov)
cortes_mov2 <- cortes_mov + 2
hist(datos_2, breaks =  cortes_mov2)
probab.est <- function(x,dat,h){
estimacion <- sum(dat < (x+h) & dat > (x-h))/ (2*h*length(dat))
return(estimacion)
}
prueba_1 <- probab.est(40,datos_2,10)
prueba_2 <- probab.est(40,datos_2,20)
varias_estimaciones_h10 <- rep(NaN, length(datos_2))
for (i in 1:length(datos_2)) {
varias_estimaciones_h10[i] <- probab.est(datos_2[i],datos_2, 10)
}
varias_estimaciones_h20 <- rep(NaN, length(datos_2))
for (i in 1:length(datos_2)) {
varias_estimaciones_h20[i] <- probab.est(datos_2[i],datos_2, 20)
}
varias_estimaciones_h30 <- rep(NaN, length(datos_2))
for (i in 1:length(datos_2)) {
varias_estimaciones_h30[i] <- probab.est(datos_2[i],datos_2, 30)
}
varias_estimaciones_h30
>>>>>>> d570664a2e5b5377ddd9cd59fb12cee5d5e6f7d3
