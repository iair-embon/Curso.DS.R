<<<<<<< HEAD
=======
<<<<<<< HEAD
help(mtcars)
mtcars$qsec
summary(mtcars2)
summary(mtcars)
mtcars$gear == 4
sum(mtcars$gear == 4)
mtcars[mtcars$disp > 150 & mtcars$mpg > 20,]
a <- mtcars[mtcars$disp > 150 & mtcars$mpg > 20,]
str(a)
subs2 <- mtcars[mtcars$gear == 4 & mtcars$am == 1,]
View(subs2)
str(subs2)
subs3 <- mtcars[mtcars$carb == 2,]
mean_subs3 <- mean(subs3$mpg)
read.csv("arbolado-en-espacios-verdes.csv")
df <- read.csv("arbolado-en-espacios-verdes.csv")
df <- read.csv("arbolado-en-espacios-verdes.csv")
names(df)
head(df)
mean(df$altura_tot)
table(df$nombre_gen)
table(df$nombre_fam)
str(df)
table(df$espacio_ve)
head(df$espacio_ve)
head(df$espacio_ve == "Arenales")
sum(df$espacio_ve == "Arenales")
sum(df$ubicacion == "Arenales")
arboles_cercanos <- df[df$espacio_ve == "AVELLANEDA, NICOLÁS, Pres.",]
arboles_cercanos <- df[df$espacio_ve == "AVELLANEDA, NICOLÁS, Pres.",]
arboles_cercanos_ord < sort(arboles_cercanos)
arboles_cercanos <- df[df$espacio_ve == "AVELLANEDA, NICOLÁS, Pres.",]
arboles_cercanos_ord < sort(arboles_cercanos)
arboles_cercanos_ord <- sort(arboles_cercanos)
?sort
arboles_cercanos_ord <- sort(arboles_cercanos$espacio_ve)
unique(arboles_cercanos$nombre_com)
=======
p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[0]) +
dbinom(df$x,n,prob = p_r_dado_y[1])
p_x_removidos
dbinom(df$x,n,prob = p_r_dado_y[0])
p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[1]) +
dbinom(df$x,n,prob = p_r_dado_y[2])
p_x_removidos
sum(p_x_removidos)
dbinom(df$x,n,prob = p_r_dado_y[1])
sum(dbinom(df$x,n,prob = p_r_dado_y[1]))
sum(dbinom(df$x,n,prob = p_r_dado_y[2]))
p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[1]) +
dbinom(df$x,n,prob = p_r_dado_y[2])
dbinom(df$x,n,prob = p_r_dado_y[1]) +
dbinom(df$x,n,prob = p_r_dado_y[2])
df$p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[1]) +
dbinom(df$x,n,prob = p_r_dado_y[2])
barplot(df$p_x_removidos, names.arg = df$x, main = "Probabilidad de X=x dado Y")
df <- data.frame(x = x, p_x_0 = p_x_0)
barplot(df$p_x_0, names.arg = df$x, main = "Probabilidad de X=x dado Y=0")
library(dplyr)
df$p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[1]) +
dbinom(df$x,n,prob = p_r_dado_y[2])
barplot(df$p_x_removidos, names.arg = df$x, main = "Probabilidad de X=x dado Y")
## ej 3
dbinom(5,n,prob = p_r_dado_y[2])
## ej 4
p_x_1 <- dbinom(x,n,prob = p_r_dado_y[2])
df$p_x_1 <-  p_x_1
df %>%
dcast(p_x_removidos ~ x, value.var = "prop")
install.packages(maditr)
install.packages("maditr")
library(maditr)
df %>%
dcast(p_x_removidos ~ x, value.var = "prop")
df %>%
dcast(y ~ x, value.var = "p_x_removidos")
library(data.table)
library(data.table)
data.table(x=x, y, p_x_removidos
data.table(x=x, y, p_x_removidos)
data.table(x=x, y, p_x_removidos)
y <- c(0,1)
P_y <- c(0.9,0.1)
# r = "remover huevo"
p_r_dado_y <- c(0.3,0.8)
n <- 8
x <- 1:8
dbinom(c(1:2),2,prob = p_r_dado_y[1])
dbinom(1,2,prob = p_r_dado_y[1])
dbinom(2,2,prob = p_r_dado_y[1])
dbinom(1,1,prob = p_r_dado_y[1])
y <- c(0,1)
P_y <- c(0.9,0.1)
y
P_y
p_r_dado_y <- c(0.3,0.8)
p_r_dado_y
dbinom(5,n,prob = p_r_dado_y[1])
dbinom(9,n,prob = p_r_dado_y[1])
dbinom(8,n,prob = p_r_dado_y[1])
dbinom(1,n,prob = p_r_dado_y[1])
dbinom(2,n,prob = p_r_dado_y[1])
dbinom(2,n,prob = p_r_dado_y[1])
dbinom(3,n,prob = p_r_dado_y[1])
dbinom(4,n,prob = p_r_dado_y[1])
dbinom(c(1:8),n,prob = p_r_dado_y[1])
sum(dbinom(c(1:8),n,prob = p_r_dado_y[1]))
p_x_0 <- dbinom(x,n,prob = p_r_dado_y[1])
p_x_0
library(ggplot2)
df <- data.frame(x = x, p_x_0 = p_x_0)
r
install.packages("dplyr")
source("D:/Windows/Descargas/Curso.DS.R/Clase 27_04/Guia_de_actividades.R", echo=TRUE)
source("D:/Windows/Descargas/Curso.DS.R/Clase 27_04/Guia_de_actividades.R", echo=TRUE)
install.packages("dplyr")
source("D:/Windows/Descargas/Curso.DS.R/Clase 27_04/Guia_de_actividades.R", echo=TRUE)
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
remove.packages("dplyr")
install.packages("dplyr")
library(dplyr)
source("D:/Windows/Descargas/Curso.DS.R/Clase 27_04/Guia_de_actividades.R", echo=TRUE)
datos <- read.csv("./Clase 27_04/depredadosclasificadas.txt", sep = " " )
p_acept <- sum(ifelse(datos$especie == 0, 1,0))/ nrow(datos)
datos %>%
filter(removidos == 5 & especie == 0) %>%
sum()/nrow(datos)
## ej 10
barplot(df$p_x_0, names.arg = df$x, main = "Probabilidad de X=x dado Y=1")
datos %>%
filter(removidos == 5 & especie == 0) %>%
sum()/nrow(datos)
datos %>%
group_by(removidos)
datos %>%
group_by(removidos) %>%
filter(especie = 0) %>%
table()
datos %>%
group_by(removidos) %>%
filter(especie == 0) %>%
table()
datos %>%
group_by(removidos) %>%
filter(especie == 0) %>%
tably()
library(janitor)
install.packages(janitor)
install.packages("janitor")
library(janitor)
datos %>%
group_by(removidos) %>%
filter(especie == 0) %>%
tably()
datos %>%
group_by(removidos) %>%
filter(especie == 0) %>%
tabyl()
datos %>%
#group_by(removidos) %>%
filter(especie == 0) %>%
tabyl(removidos)
1:8
y <- c(0,1)
P_y <- c(0.9,0.1)
# r = "remover huevo"
p_r_dado_y <- c(0.3,0.8)
n <- 8
x <- 0:8
## ej 1
dbinom(5,n,prob = p_r_dado_y[1])
p_x_0 <- dbinom(x,n,prob = p_r_dado_y[1])
library(ggplot2)
df <- data.frame(x = x, p_x_0 = p_x_0)
p_x_0
sum(p_x_0)
library(ggplot2)
df <- data.frame(x = x, p_x_0 = p_x_0)
barplot(df$p_x_0, names.arg = df$x, main = "Probabilidad de X=x dado Y=0")
dbinom(5,n,prob = p_r_dado_y[2])
## ej 4
p_x_1 <- dbinom(x,n,prob = p_r_dado_y[2])
df$p_x_1 <-  p_x_1
sum(p_x_1)
df$p_x_1 <-  p_x_1
barplot(df$p_x_1, names.arg = df$x, main = "Probabilidad de X=x dado Y=1")
dbinom(5,n,prob = p_r_dado_y[1])*p_r_dado_y[1] +
dbinom(5,n,prob = p_r_dado_y[2]) * p_r_dado_y[2]
p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[1])*p_r_dado_y[1] +
dbinom(df$x,n,prob = p_r_dado_y[2]) * p_r_dado_y[2]
sum(p_x_removidos)
df$x
n
p_r_dado_y
dbinom(df$x,n,prob = p_r_dado_y[1])
dbinom(df$x,n,prob = p_r_dado_y[1])*p_r_dado_y[1]
sum( dbinom(df$x,n,prob = p_r_dado_y[1])*p_r_dado_y[1])
dbinom(df$x,n,prob = p_r_dado_y[1])*p_r_dado_y[1]
sum(dbinom(df$x,n,prob = p_r_dado_y[1])*p_r_dado_y[1])
dbinom(df$x,n,prob = p_r_dado_y[2]) * p_r_dado_y[2]
sum( dbinom(df$x,n,prob = p_r_dado_y[2]) * p_r_dado_y[2])
p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[1])*p_r_dado_y[1] +
dbinom(df$x,n,prob = p_r_dado_y[2]) * p_r_dado_y[2]
tab1 <- matrix(c(df$p_x_0, df$p_x_1,p_x_removidos),nrow = 3, byrow = TRUE)
colnames(tab1) <- 1:8
rownames(tab1) <- c("p_x_0","p_x_1","p_x_removidos")
rowSums(tab1)
p_y[1]
P_y[1]
dbinom(5,n,prob = p_r_dado_y[1])*P_y[1] +
dbinom(5,n,prob = p_r_dado_y[2]) * P_y[2]
dbinom(5,n,prob = p_r_dado_y[1])*P_y[1]
dbinom(5,n,prob = p_r_dado_y[2]) * P_y[2]
p_x_removidos <- dbinom(df$x,n,prob = p_r_dado_y[1])*P_y[1] +
dbinom(df$x,n,prob = p_r_dado_y[2]) *P_y[2]
p_x_removidos
sum(p_x_removidos)
## ej 7
tab1 <- matrix(c(df$p_x_0, df$p_x_1,p_x_removidos),nrow = 3, byrow = TRUE)
colnames(tab1) <- 1:8
rownames(tab1) <- c("p_x_0","p_x_1","p_x_removidos")
rowSums(tab1)
### da algo raro, las sumas no me dan 1, deberian
## ej 8
library(dplyr)
datos <- read.csv("./Clase 27_04/depredadosclasificadas.txt", sep = " " )
p_acept <- sum(ifelse(datos$especie == 0, 1,0))/ nrow(datos)
## ej 9
datos %>%
filter(removidos == 5 & especie == 0) %>%
sum()/nrow(datos)
## ej 10
barplot(df$p_x_0, names.arg = df$x, main = "Probabilidad de X=x dado Y=1")
library(janitor)
datos %>%
#group_by(removidos) %>%
filter(especie == 0) %>%
tabyl(removidos)
datos %>%
filter(especie == 0) %>%
tabyl(removidos)
barplot(df$p_x_0, names.arg = df$x, main = "Probabilidad de X=x dado Y=1")
tab2 <- datos %>%
filter(especie == 0) %>%
tabyl(removidos)
tab2$percent
barplot(df$p_x_0, names.arg = df$x, main = "Probabilidad de X=x dado Y=0")
df$p_x_0_estimated <-  tab2$percent
tab2$percent <- append(tab2$percent,0)
tab2$percent <- append(tab2$percent,0)
tab2$percent
p_x_0_estimated <-  tab2$percent
p_x_0_estimated <- append(p_x_0_estimated,0)
p_x_0_estimated
df$p_x_0_estimated <- p_x_0_estimated
df
ggplot(df) +
geom_bar(aes(x=x,y=df$p_x_0),stat="identity")
ggplot(df) +
geom_bar(aes(x=x,y=p_x_0),stat="identity")
library(reshape2)
install.packages("reshape2")
library(reshape2)
df2 <- melt(df, id.vars = x)
df2 <- melt(df, id.vars = "x")
df2
df2 <- df %>%
select(x,p_x_0, p_x_0_estimated)   %>%
melt(df, id.vars = "x")
df %>%
select(x,p_x_0, p_x_0_estimated)
df %>%
select(x,p_x_0, p_x_0_estimated)   %>%
melt(df, id.vars = "x")
df %>%
select(x,p_x_0, p_x_0_estimated)   %>%
melt(id.vars = "x")
df2 <- df %>%
select(x,p_x_0, p_x_0_estimated)   %>%
melt(id.vars = "x")
ggplot(df2, aes(x=x, y=variable, fill= variable)) +
geom_bar(stat="identity")
ggplot(df2, aes(x=x, y=variable, fill= variable)) +
geom_bar(stat="identity", position = "dodge")
ggplot(df2, aes(x=x, y=variable, fill= variable)) +
geom_bar(position = "dodge")
ggplot(df2, aes(x=x, y=variable, fill= variable)) +
geom_bar(stat="identity",position = "dodge")
ggplot(df2, aes(x=x, y=value, fill= variable)) +
geom_bar(stat="identity",position = "dodge")
barplot(df$p_x_1, names.arg = df$x, main = "Probabilidad de X=x dado Y=0")
tab2 <- datos %>%
filter(especie == 1) %>%
tabyl(removidos)
tab2
p_x_0_estimated <-  tab2$percent
p_x_0_estimated
p_x_0_estimated <- append(c(0,0,0),p_x_0_estimated)
p_x_0_estimated
library(janitor)
tab2 <- datos %>%
filter(especie == 0) %>%
tabyl(removidos)
p_x_0_estimated <-  tab2$percent
p_x_0_estimated <- append(p_x_0_estimated,0)
df$p_x_0_estimated <- p_x_0_estimated
library(reshape2)
df2 <- df %>%
select(x,p_x_0, p_x_0_estimated)   %>%
melt(id.vars = "x")
ggplot(df2, aes(x=x, y=value, fill= variable)) +
geom_bar(stat="identity",position = "dodge")
tab3 <- datos %>%
filter(especie == 1) %>%
tabyl(removidos)
p_x_1_estimated <-  tab3$percent
p_x_1_estimated <- append(c(0,0,0),p_x_1_estimated)
df$p_x_1_estimated <- p_x_1_estimated
df3 <- df %>%
select(x,p_x_1, p_x_1_estimated)   %>%
melt(id.vars = "x")
ggplot(df3, aes(x=x, y=value, fill= variable)) +
geom_bar(stat="identity",position = "dodge")
tab4 <- matrix(c(df$p_x_0_estimated,
df$p_x_1_estimated),
nrow = 2, byrow = TRUE)
tab4
colnames(tab1) <- 0:8
rownames(tab1) <- c("p_x_0","p_x_1","p_x_removidos")
rowSums(tab1)
colnames(tab4) <- 0:8
rownames(tab4) <- c("p_x_0","p_x_1","p_x_removidos")
rowSums(tab4)
0:8
length(df$p_x_0_estimated)
matrix(c(df$p_x_0_estimated,
df$p_x_1_estimated),
nrow = 2, byrow = TRUE)
colnames(tab4) <- 0:8
rownames(tab4) <- c("p_x_0_estimated",
"p_x_1_estimated")
rowSums(tab4)
error <- regla5(datos$removidos)
regla5 <- function(x){
v <- ifelse(x => 5,1,0)
return(v)
}
regla5 <- function(x){
v <- ifelse(x => 5,1,0)
return(v)}
regla5 <- function(x){
v <- ifelse(x => 5,1,0)
return(v)
}
regla5 <- function(x){
v <- ifelse(x >= 5,1,0)
return(v)
}
error <- regla5(datos$removidos)
sum(error)
y_predicted <- regla5(datos$removidos)
error <- ifelse(y_predicted == datos$especie,0,1)
sum(error)
r <- sum(error)/nrow(datos)
r
rechazadorpar <- function(x){
v <- ifelse((x %% 2) == 0,1,0)
return(v)
}
y_predicted <- rechazadorpar(datos$removidos)
error <- ifelse(y_predicted == datos$especie,0,1)
r <- sum(error)/nrow(datos)
r
reglacorte <- function(x,t){
v <- c()
for (i in 1:length(t)) {
y_predicted <- ifelse(x >= t[i],1,0)
error <- ifelse(y_predicted == datos$especie,0,1)
r <- sum(error)/nrow(datos)
v <- c(v,r)
}
return(v)
}
r <- reglacorte(x= datos$removidos,t = c(1:8))
r
min(r)
which(min(r))
which(r == min(r))
ErrorClassTRUE <- function(g,y){
error <- ifelse(g != y,1,0)
r <- mean(error)
return(r)
}
source("D:/Windows/Descargas/Curso.DS.R/Clase del 6-05/Clase6_mayo.R", echo=TRUE)
df <- read.csv("./Descargas/alturas_identificacion_1234_n_500.csv")
wd
root <- rprojroot::is_rstudio_project
basename(getwd())
filepath <- root$find_file("./Clase del 6-05/alturas_identificacion_1234_n_500.csv")
df <- read.csv(filepath)
source("D:/Windows/Descargas/Curso.DS.R/Clase del 6-05/Clase6_mayo.R", echo=TRUE)
ClasificoVecinos <- function(X, Y, xNuevo, k=10){
indices <- order(abs(X-xNuevo))[1:k]
regla <-ifelse( mean(Y[indices]== "F") >= 0.5,1,0)
return(regla)
}
ClasificoMovil <- function(X, Y, xNuevo, h=1){
indices <- which(X >= xNuevo - h   & X <= xNuevo + h)
prop_1 <- mean(ifelse( Y[indices]=="F",1,0))
return(prop_1)
}
library(ggplot2)
library(hrbrthemes)
ggplot(df, aes(x = altura, fill = genero))+
geom_histogram()
ggplot(df, aes(x = altura, fill = genero))+
geom_histogram()+
geom_density()
ggplot(df, aes(x = altura, fill = genero))+
geom_histogram()+
geom_density(fill=genero)
ggplot(df, aes(x = altura, fill = genero))+
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white")+
geom_density()
ggplot(df, aes(x = altura, fill = genero))+
geom_histogram(aes(y = ..density..))+
geom_density()
ggplot(df, aes(x = altura, fill = genero))+
geom_histogram(aes(y = ..density..))+
geom_density(alpha= 0.2)
ggplot(df, aes(x = altura, fill = genero))+
geom_histogram(aes(y = ..density..))+
geom_density(alpha= 0.4)
library(dplyr)
head(df$genero)
prop_f <- df %>%
filter(genero == "F") %>%
nrow()/nrow(df)
prop_f
prop_f <- df %>%
filter(genero == "F")
500/241
241/500
prop_f <- df %>%
filter(genero == "F") %>%
nrow()/nrow(df)
prop_m <- df %>%
filter(genero == "M") %>%
nrow()/nrow(df)
head(df$altura)
prop_f <- df %>%
filter(genero == "F") %>%
nrow()/nrow(df)
# la P(Y=1) = prop_f
## 8
prop_m <- df %>%
filter(genero == "M") %>%
nrow()/nrow(df)
prop_f
prop_m
prop_f <- df %>%
filter(genero == "F" & altura == 165) %>%
nrow()/nrow(df)
prop_f
df %>%
filter(genero == "F" & altura == 165)
prop_f <- df %>%
filter(genero == "F" && altura == 165) %>%
nrow()/nrow(df)
df %>%
filter(genero == "F" & altura == 165)
prop_f <- df %>%
filter( altura == 165) %>%
nrow()/nrow(df)
prop_f
table(df$altura)
prop_m <- df %>%
filter(genero == "M" &
altura > 164 &
altura < 166) %>%
nrow()/nrow(df)
prop_m
prop_f <- df %>%
filter(genero == "F" &
altura > 164 &
altura < 166) %>%
nrow()/nrow(df)
prop_f
prop_f <- df %>%
filter(genero == "F" &
altura > (AlguienNuevo-1) &
altura < (AlguienNuevo+1)) %>%
nrow()/nrow(df)
prop_f
prop_m <- df %>%
filter(genero == "M" &
altura > (AlguienNuevo-1) &
altura < (AlguienNuevo+1)) %>%
nrow()/nrow(df)
prop_m
rlang::last_error()
AlguienNuevo <- 165
prop_f <- df %>%
filter(genero == "F" &
>>>>>>> cca95e1c42bbc429d30e31ec63e75bc6681e591e
altura > (AlguienNuevo-1) &
altura < (AlguienNuevo+1)) %>%
nrow()/nrow(df)
prop_m <- df %>%
filter(genero == "M" &
altura > (AlguienNuevo-1) &
altura < (AlguienNuevo+1)) %>%
nrow()/nrow(df)
prop_m
prop_f
AlguienNuevo <- 175
prop_f <- df %>%
filter(genero == "F" &
altura > (AlguienNuevo-1) &
altura < (AlguienNuevo+1)) %>%
nrow()/nrow(df)
prop_m <- df %>%
filter(genero == "M" &
altura > (AlguienNuevo-1) &
altura < (AlguienNuevo+1)) %>%
nrow()/nrow(df)
prop_f
prop_m
ClasificoGenerativo <- function(X, Y, xNuevo){
df <- data.frame(genero = Y,
altura = X)
prop_f <- df %>%
filter(genero == "F" &
altura > (xNuevo-1) &
altura < (xNuevo+1)) %>%
nrow()/nrow(df)
prop_m <- df %>%
filter(genero == "M" &
altura > (xNuevo-1) &
altura < (xNuevo+1)) %>%
nrow()/nrow(df)
regla <- ifelse(prop_f>prop_m,1,0)
return(regla)
}
ClasificoGenerativo(df$altura,df$genero,165)
ClasificoGenerativo(df$altura,df$genero,175)
<<<<<<< HEAD
runif(1000,67,63)
runif(?)
?runif()
runif(1000,67,73)
q9 <- sort(vector)
vector <- runif(1000,67,73)
q9 <- sort(vector)
vector <- runif(1000,67,73)
q9 <- sort(vector)
plot(q9)
vector <- runif(10000,67,73)
vector <- runif(10000,67,73)
q9 <- sort(vector)
Nrep <- 10000
Nrep*0.9
q <- Nrep*0.9
q9 <- Nrep*0.9
pos <- Nrep*0.9
q9 <- sort(vector)[pos]
q9
muchas_uniformes <- runif(Nrep,67,73)
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
?quantile
lala <- 1:10
quantile(lala,0.9)
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
Nrep <- 1000
muchas_uniformes <- runif(Nrep,67,73)
# 3
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:i]
muchos_cuantiles_uniformes[i] <- quantile(part_muchas_uniformes,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
# 5
Ngen <- 10
for (i in 1:Ngen){
muchas_uniformes <- runif(Nrep,67,73)
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (j in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
}
plot(1:Nrep, muchos_cuantiles_uniformes, add = T)
}
plot(1:Nrep, muchos_cuantiles_uniformes, ylim = c(65,75))
# 5
Ngen <- 10
for (i in 1:Ngen){
muchas_uniformes <- runif(Nrep,67,73)
muchos_cuantiles_uniformes <- rep(NaN, Nrep)
for (j in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
}
points(1:Nrep, muchos_cuantiles_uniformes)
}
qunif(0.9,67,73)
qnorm(0.9,70,1.2)
p9 <- qnorm(0.9,70,1.2)
Nrep <- 1000
muchas_normales <- rnrom(Nrep,70,1.2)
muchas_normales <- rnorm(Nrep,70,1.2)
Nrep <- 1000
muchas_normales <- rnorm(Nrep,70,1.2)
muchos_cuantiles_normales <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_normales)) {
part_muchas_normales <- muchas_normales[1:i]
muchos_cuantiles_normales[i] <- quantile(part_muchas_normales,0.9)
}
plot(1:Nrep, muchos_cuantiles_normales, ylim = c(60,80))
Ngen <- 10
for (i in 1:Ngen){
muchas_normales <- rnorm(Nrep,60,80)
muchos_cuantiles_normales <- rep(NaN, Nrep)
for (j in 1:length(muchos_cuantiles_normales)) {
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
}
points(1:Nrep, muchos_cuantiles_normales)
}
Nrep <- 1000
muchas_normales <- rnorm(Nrep,70,1.2)
# 3
muchos_cuantiles_normales <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_normales)) {
part_muchas_normales <- muchas_normales[1:i]
muchos_cuantiles_normales[i] <- quantile(part_muchas_normales,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_normales, ylim = c(60,80))
# 5
Ngen <- 10
for (i in 1:Ngen){
muchas_normales <- rnorm(Nrep,70,1.2)
muchos_cuantiles_normales <- rep(NaN, Nrep)
for (j in 1:length(muchos_cuantiles_normales)) {
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
}
points(1:Nrep, muchos_cuantiles_normales)
}
qnorm(0.9,70,1.2)
p9 <- qexp(0.9,1/10)
p9
Nrep <- 1000
muchas_normales <- rexp(Nrep,1/10)
muchas_exponenciales <- rexp(Nrep,1/10)
plot(muchas_exponenciales)
plot(sprt(muchas_exponenciales))
plot(sort(muchas_exponenciales))
muchos_cuantiles_exponenciales <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_exponenciales)) {
part_muchas_exponenciales <- muchas_exponenciales[1:i]
muchos_cuantiles_exponenciales[i] <- quantile(part_muchas_exponenciales,0.9)
}
plot(1:Nrep, muchos_cuantiles_exponenciales, ylim = c(0,35))
Nrep <- 1000
muchas_exponenciales <- rexp(Nrep,1/10)
# 3
muchos_cuantiles_exponenciales <- rep(NaN, Nrep)
for (i in 1:length(muchos_cuantiles_exponenciales)) {
part_muchas_exponenciales <- muchas_exponenciales[1:i]
muchos_cuantiles_exponenciales[i] <- quantile(part_muchas_exponenciales,0.9)
}
# 4
plot(1:Nrep, muchos_cuantiles_exponenciales, ylim = c(0,35))
# 5
Ngen <- 10
for (i in 1:Ngen){
muchas_exponenciales <- rexp(Nrep,1/10)
muchos_cuantiles_exponenciales <- rep(NaN, Nrep)
for (j in 1:length(muchos_cuantiles_exponenciales)) {
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
}
points(1:Nrep, muchos_cuantiles_exponenciales)
}
qexp(0.9,1/10)
n5_unif <- rep(NaN,5)
Ngen <- 100
n5_unif <- rep(NaN,5)
Nrep
runif(N5,67,73)
Ngen <- 100
N5 <- 1000
n5_unif <- c()
runif(N5,67,73)
runif(N5,67,73)
N5 <- 5
runif(N5,67,73)
Ngen <- 100
N5 <- 5
n5_unif <- c()
for (i in 1:Ngen){
muchas_uniformes <- runif(N5,67,73)
muchos_cuantiles_uniformes <- rep(NaN, N5)
for (j in 1:length(muchos_cuantiles_uniformes)) {
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
}
n5_unif <-  c(n5_unif,muchos_cuantiles_uniformes)
}
n5_unif
hist(n5_unif)
Ngen <- 100
N5 <- 5
n5_unif <- c()
n5_norm <- c()
n5_exp <- c()
for (i in 1:Ngen){
# unif
muchas_uniformes <- runif(N5,67,73)
muchos_cuantiles_uniformes <- rep(NaN, N5)
# norm
muchas_normales <- rnorm(N5,70,1.2)
muchos_cuantiles_normales <- rep(NaN, N5)
# exp
muchas_exponenciales <- rnorm(N5,1/10)
muchos_cuantiles_exponenciales <- rep(NaN, N5)
for (j in 1:N5) {
# unif
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
# norm
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
# exp
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
}
n5_unif <-  c(n5_unif,muchos_cuantiles_uniformes)
n5_norm <-  c(n5_unif,muchos_cuantiles_normales)
n5_exp <-  c(n5_unif,muchos_cuantiles_exponenciales)
}
hist(n5_unif)
hist(n5_norm)
hist(n5_exp)
n5_exp
for (i in 1:Ngen){
# unif
muchas_uniformes <- runif(N5,67,73)
muchos_cuantiles_uniformes <- rep(NaN, N5)
# norm
muchas_normales <- rnorm(N5,70,1.2)
muchos_cuantiles_normales <- rep(NaN, N5)
# exp
muchas_exponenciales <- rnorm(N5,1/10)
muchos_cuantiles_exponenciales <- rep(NaN, N5)
for (j in 1:N5) {
# unif
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
# norm
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
# exp
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
}
n5_unif <-  c(n5_unif,muchos_cuantiles_uniformes)
n5_norm <-  c(n5_unif,muchos_cuantiles_normales)
n5_exp <-  c(n5_unif,muchos_cuantiles_exponenciales)
}
Ngen <- 100
N5 <- 5
n5_unif <- c()
n5_norm <- c()
n5_exp <- c()
i = 1
j=1
# unif
muchas_uniformes <- runif(N5,67,73)
muchos_cuantiles_uniformes <- rep(NaN, N5)
# norm
muchas_normales <- rnorm(N5,70,1.2)
muchos_cuantiles_normales <- rep(NaN, N5)
# exp
muchas_exponenciales <- rnorm(N5,1/10)
muchos_cuantiles_exponenciales <- rep(NaN, N5)
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
# norm
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
# exp
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
j=2
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
# norm
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
# exp
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
Ngen <- 100
N5 <- 5
n5_unif <- c()
n5_norm <- c()
n5_exp <- c()
for (i in 1:Ngen){
# unif
muchas_uniformes <- runif(N5,67,73)
muchos_cuantiles_uniformes <- rep(NaN, N5)
# norm
muchas_normales <- rnorm(N5,70,1.2)
muchos_cuantiles_normales <- rep(NaN, N5)
# exp
muchas_exponenciales <- rnorm(N5,1/10)
muchos_cuantiles_exponenciales <- rep(NaN, N5)
for (j in 1:N5) {
# unif
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
# norm
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
# exp
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
}
n5_unif <-  c(n5_unif,muchos_cuantiles_uniformes)
n5_norm <-  c(n5_norm,muchos_cuantiles_normales)
n5_exp <-  c(n5_exp,muchos_cuantiles_exponenciales)
}
hist(n5_unif)
hist(n5_norm)
hist(n5_exp)
Ngen <- 100
N30 <- 30
n30_unif <- c()
n30_norm <- c()
n30_exp <- c()
for (i in 1:Ngen){
# unif
muchas_uniformes <- runif(N30,67,73)
muchos_cuantiles_uniformes <- rep(NaN, N30)
# norm
muchas_normales <- rnorm(N30,70,1.2)
muchos_cuantiles_normales <- rep(NaN, N30)
# exp
muchas_exponenciales <- rnorm(N30,1/10)
muchos_cuantiles_exponenciales <- rep(NaN, N30)
for (j in 1:N30) {
# unif
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
# norm
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
# exp
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
}
n30_unif <-  c(n30_unif,muchos_cuantiles_uniformes)
n30_norm <-  c(n30_norm,muchos_cuantiles_normales)
n30_exp <-  c(n30_exp,muchos_cuantiles_exponenciales)
}
hist(n30_unif)
hist(n30_norm)
hist(n30_exp)
hist(n30_unif)
Ngen <- 100
N100 <- 100
n100_unif <- c()
n100_norm <- c()
n100_exp <- c()
for (i in 1:Ngen){
# unif
muchas_uniformes <- runif(N100,67,73)
muchos_cuantiles_uniformes <- rep(NaN, N100)
# norm
muchas_normales <- rnorm(N100,70,1.2)
muchos_cuantiles_normales <- rep(NaN, N100)
# exp
muchas_exponenciales <- rnorm(N100,1/10)
muchos_cuantiles_exponenciales <- rep(NaN, N100)
for (j in 1:N100) {
# unif
part_muchas_uniformes <- muchas_uniformes[1:j]
muchos_cuantiles_uniformes[j] <- quantile(part_muchas_uniformes,0.9)
# norm
part_muchas_normales <- muchas_normales[1:j]
muchos_cuantiles_normales[j] <- quantile(part_muchas_normales,0.9)
# exp
part_muchas_exponenciales <- muchas_exponenciales[1:j]
muchos_cuantiles_exponenciales[j] <- quantile(part_muchas_exponenciales,0.9)
}
n100_unif <-  c(n100_unif,muchos_cuantiles_uniformes)
n100_norm <-  c(n100_norm,muchos_cuantiles_normales)
n100_exp <-  c(n100_exp,muchos_cuantiles_exponenciales)
}
hist(n100_unif)
hist(n100_norm)
hist(n100_exp)
hist(n100_unif)
hist(n100_norm)
hist(n100_exp)
=======
>>>>>>> 5f55cef52033fbe526de2d67e4f1d5b2e4fbfe07
>>>>>>> cca95e1c42bbc429d30e31ec63e75bc6681e591e
